basePath: /
definitions:
  main.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      id:
        type: string
      notes:
        type: string
      title:
        type: string
    required:
    - title
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample API for managing todos
  title: Todo API
  version: "1.0"
paths:
  /todo:
    get:
      description: Retrieve all todo items, cached with Redis
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Todo'
            type: array
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo item
      parameters:
      - description: Todo to create
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Todo'
      summary: Create a todo
      tags:
      - todos
  /todo/{id}:
    get:
      description: Retrieve a specific todo item by its ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Todo'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a todo by ID
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a todo item by its ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated todo data
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/main.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a todo
      tags:
      - todos
swagger: "2.0"
